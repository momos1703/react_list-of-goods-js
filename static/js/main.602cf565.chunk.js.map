{"version":3,"sources":["components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","goods","map","good","name","id","goodsWithProperty","i","length","SORT_BY_NAME","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoodsList","sortName","reverse","prepearedGoods","sort","good1","good2","localeCompare","prepeareGoods","ResetButton","type","className","onClick","cn","prevIsReversed","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAkCA,EAAKC,MAAfD,EAAKE,UCiB7BC,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGwCJ,KAAI,SAACC,EAAMI,GAAP,MAAc,CAC1DF,GAAIE,EAAI,EACRH,KAAMD,EACNK,OAAQL,EAAKK,WAGTC,EAAe,OACfC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAAuBhB,EAAOiB,EAAUC,GACtC,IAAIC,EAAc,YAAOnB,GAqBzB,OAnBIiB,GACFE,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQL,GACN,KAAKT,EACH,OAAOa,EAAK,KAAeE,cAAcD,EAAK,MAEhD,KAAKb,EACH,OAAOY,EAAK,OAAmBC,EAAK,OAEtC,QACE,OAAO,MAKXJ,IACFC,EAAiBA,EAAeD,WAG3BC,EAMiBK,CACtBnB,EACAO,EACAE,GAGIW,EAAc,kBAClB,wBACEC,KAAK,SACLC,UAAU,4BACVC,QAAS,WACPf,EAAa,IACbE,GAAc,IALlB,oBAYF,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,IAE5BoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAE5BmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfc,QAAS,kBAAOb,GAAc,SAAAe,GAAc,OAAKA,MALnD,sBAUElB,GAAaE,IAAe,cAACW,EAAD,OAGhC,cAAC,EAAD,CAAWzB,MAAOgB,QC7GxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.602cf565.chunk.js","sourcesContent":["export const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good.id}>{good.name}</li>\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithProperty = goodsFromServer.map((good, i) => ({\n  id: i + 1,\n  name: good,\n  length: good.length,\n}));\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nfunction prepeareGoods(goods, sortName, reverse) {\n  let prepearedGoods = [...goods];\n\n  if (sortName) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortName) {\n        case SORT_BY_NAME:\n          return good1[SORT_BY_NAME].localeCompare(good2[SORT_BY_NAME]);\n\n        case SORT_BY_LENGTH:\n          return good1[SORT_BY_LENGTH] - good2[SORT_BY_LENGTH];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoodsList = prepeareGoods(\n    goodsWithProperty,\n    sortField,\n    isReversed,\n  );\n\n  const ResetButton = () => (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={() => {\n        setSortField('');\n        setIsReversed(false);\n      }}\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_BY_NAME,\n          })}\n          onClick={() => setSortField(SORT_BY_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => (setIsReversed(prevIsReversed => !prevIsReversed))}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && <ResetButton />}\n      </div>\n\n      <GoodsList goods={sortedGoodsList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}